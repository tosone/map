on:
  push:
    tags:
      - "v*"

name: Create Release

jobs:
  linux-build:
    name: Create Linux Release
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: install packages
        run: sudo apt-get -y -qq install upx
      - name: make
        run: make deps && make all && mv map map-linux
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: map-linux
          path: ./map-linux
          retention-days: 5
  macos-build:
    name: Create MacOS Release
    runs-on: macos-11.0
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: install packages
        run: brew install upx
      - name: make
        run: make deps && make all && mv map map-macos
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: map-macos
          path: map-macos
          retention-days: 5
  create-github-release:
    needs:
      - linux-build
      - macos-build
    name: Create GitHub Release
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set env
        run: echo "GIT_TAG=`echo $(git describe --tags --abbrev=0)`" >> $GITHUB_ENV
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: .
      - name: install packages
        run: ls -al && ls map-linux
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
          body: Download asset [`map-linux`](https://github.com/tosone/map/releases/download/${{ env.GIT_TAG }}/map-linux) or [`map-macos`](https://github.com/tosone/map/releases/download/${{ env.GIT_TAG }}/map-macos), static compiled, run it anywhere on Linux or MacOS.
      - name: Upload Linux Release Asset
        id: upload-linux-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: map-linux/map-linux
          asset_name: map-linux
          asset_content_type: application/octet-stream
      - name: Upload MacOS Release Asset
        id: upload-macos-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: map-macos/map-macos
          asset_name: map-macos
          asset_content_type: application/octet-stream
